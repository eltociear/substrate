[package]
name = 'pallet-session-benchmarking'
version = '4.0.0-dev'
authors = ['Parity Technologies <admin@parity.io>']
edition = '2021'
license = 'Apache-2.0'
homepage = 'https://substrate.io'
repository = 'https://github.com/paritytech/substrate/'
description = 'FRAME sessions pallet benchmarking'
readme = 'README.md'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[dependencies]
frame-benchmarking = { default-features = false, path = '../../benchmarking', version = '4.0.0-dev' }
frame-support = { default-features = false, path = '../../support', version = '4.0.0-dev' }
frame-system = { default-features = false, path = '../../system', version = '4.0.0-dev' }
pallet-session = { default-features = false, path = '../../session', version = '4.0.0-dev' }
pallet-staking = { default-features = false, features = ['runtime-benchmarks'], path = '../../staking', version = '4.0.0-dev' }
rand = { default-features = false, version = '0.7.2' }
sp-runtime = { default-features = false, path = '../../../primitives/runtime', version = '6.0.0' }
sp-session = { default-features = false, path = '../../../primitives/session', version = '4.0.0-dev' }
sp-std = { default-features = false, path = '../../../primitives/std', version = '4.0.0' }

[dev-dependencies]
codec = { features = ['derive'], package = 'parity-scale-codec', version = '3.0.0' }
frame-election-provider-support = { path = '../../election-provider-support', version = '4.0.0-dev' }
pallet-balances = { path = '../../balances', version = '4.0.0-dev' }
pallet-staking-reward-curve = { path = '../../staking/reward-curve', version = '4.0.0-dev' }
pallet-timestamp = { path = '../../timestamp', version = '4.0.0-dev' }
scale-info = '2.0.1'
sp-core = { path = '../../../primitives/core', version = '6.0.0' }
sp-io = { path = '../../../primitives/io', version = '6.0.0' }

[features]
default = ['std']
std = [
	'frame-benchmarking/std',
	'frame-support/std',
	'frame-system/std',
	'pallet-session/std',
	'pallet-staking/std',
	'sp-runtime/std',
	'sp-session/std',
	'sp-std/std',
]
