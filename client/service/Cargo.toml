[package]
name = 'sc-service'
version = '0.10.0-dev'
authors = ['Parity Technologies <admin@parity.io>']
edition = '2021'
license = 'GPL-3.0-or-later WITH Classpath-exception-2.0'
homepage = 'https://substrate.io'
repository = 'https://github.com/paritytech/substrate/'
description = 'Substrate service. Starts a thread that spins up the network, client, and extrinsic pool. Manages communication between them.'
readme = 'README.md'

[package.metadata.docs.rs]
targets = ['x86_64-unknown-linux-gnu']

[features]
default = ['db']
db = ['sc-client-db/with-kvdb-rocksdb', 'sc-client-db/with-parity-db']
wasmtime = ['sc-executor/wasmtime']
test-helpers = []

[dependencies]
async-trait = '0.1.50'
codec = { package = 'parity-scale-codec', version = '3.0.0' }
directories = '4.0.1'
exit-future = '0.2.0'
futures = '0.3.21'
futures-timer = '3.0.1'
hash-db = '0.15.2'
jsonrpc-core = '18.0'
jsonrpc-pubsub = '18.0'
log = '0.4.16'
parity-util-mem = { default-features = false, features = [
	'primitive-types',
], version = '0.11.0' }
parking_lot = '0.12.0'
pin-project = '1.0.10'
prometheus-endpoint = { package = 'substrate-prometheus-endpoint', path = '../../utils/prometheus', version = '0.10.0-dev' }
rand = '0.7.3'
sc-block-builder = { path = '../block-builder', version = '0.10.0-dev' }
sc-chain-spec = { path = '../chain-spec', version = '4.0.0-dev' }
sc-client-api = { path = '../api', version = '4.0.0-dev' }
sc-client-db = { default-features = false, path = '../db', version = '0.10.0-dev' }
sc-consensus = { path = '../../client/consensus/common', version = '0.10.0-dev' }
sc-executor = { path = '../executor', version = '0.10.0-dev' }
sc-informant = { path = '../informant', version = '0.10.0-dev' }
sc-keystore = { path = '../keystore', version = '4.0.0-dev' }
sc-network = { path = '../network', version = '0.10.0-dev' }
sc-offchain = { path = '../offchain', version = '4.0.0-dev' }
sc-rpc = { path = '../rpc', version = '4.0.0-dev' }
sc-rpc-server = { path = '../rpc-servers', version = '4.0.0-dev' }
sc-sysinfo = { path = '../sysinfo', version = '6.0.0-dev' }
sc-telemetry = { path = '../telemetry', version = '4.0.0-dev' }
sc-tracing = { path = '../tracing', version = '4.0.0-dev' }
sc-transaction-pool = { path = '../transaction-pool', version = '4.0.0-dev' }
sc-transaction-pool-api = { path = '../transaction-pool/api', version = '4.0.0-dev' }
sc-utils = { path = '../utils', version = '4.0.0-dev' }
serde = '1.0.136'
serde_json = '1.0.79'
sp-api = { path = '../../primitives/api', version = '4.0.0-dev' }
sp-application-crypto = { path = '../../primitives/application-crypto', version = '6.0.0' }
sp-block-builder = { path = '../../primitives/block-builder', version = '4.0.0-dev' }
sp-blockchain = { path = '../../primitives/blockchain', version = '4.0.0-dev' }
sp-consensus = { path = '../../primitives/consensus/common', version = '0.10.0-dev' }
sp-core = { path = '../../primitives/core', version = '6.0.0' }
sp-externalities = { path = '../../primitives/externalities', version = '0.12.0' }
sp-inherents = { path = '../../primitives/inherents', version = '4.0.0-dev' }
sp-keystore = { path = '../../primitives/keystore', version = '0.12.0' }
sp-runtime = { path = '../../primitives/runtime', version = '6.0.0' }
sp-session = { path = '../../primitives/session', version = '4.0.0-dev' }
sp-state-machine = { path = '../../primitives/state-machine', version = '0.12.0' }
sp-storage = { path = '../../primitives/storage', version = '6.0.0' }
sp-tracing = { path = '../../primitives/tracing', version = '5.0.0' }
sp-transaction-pool = { path = '../../primitives/transaction-pool', version = '4.0.0-dev' }
sp-transaction-storage-proof = { path = '../../primitives/transaction-storage-proof', version = '4.0.0-dev' }
sp-trie = { path = '../../primitives/trie', version = '6.0.0' }
sp-version = { path = '../../primitives/version', version = '5.0.0' }
tempfile = '3.1.0'
thiserror = '1.0.30'
tokio = { features = ['time', 'rt-multi-thread', 'parking_lot'], version = '1.17.0' }
tracing = '0.1.29'
tracing-futures = { version = '0.2.4' }

[dev-dependencies]
async-std = { default-features = false, version = '1.11.0' }
substrate-test-runtime = { path = '../../test-utils/runtime/', version = '2.0.0' }
substrate-test-runtime-client = { path = '../../test-utils/runtime/client', version = '2.0.0' }
